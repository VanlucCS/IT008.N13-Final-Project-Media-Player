<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOpenFile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>